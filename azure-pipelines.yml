# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(majorMinorVersion).$(patchVersion)

# pipeline variables
variables:
  majorMinorVersion: 1.0
  # semanticVersion counter is automatically incremented by one in each execution of pipeline
  # second parameter is seed value to reset to every time the referenced majorMinorVersion is changed
  # patchVersion: $[counter(variables['majorMinorVersion'], 0)]
  patchVersion: 4


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore Cybtans SDK'
  inputs:
    command: 'restore'
    projects: '**/CybtansSDK.sln'   

- task: DotNetCoreCLI@2
  displayName: 'Build Cybtans SDK'
  inputs:
    command: 'build'
    projects: '**/CybtansSDK.sln'
    arguments: '--configuration $(configuration)'
    versioningScheme: 'byBuildNumber'

- task: DotNetCoreCLI@2
  displayName: 'Test Cybtans SDK'
  inputs:
    command: 'test'
    projects: '**/CybtansSDK.sln'
    testRunTitle: 'Run Tests Cybtans SDK'

- task: DotNetCoreCLI@2
  displayName: 'Package Nuget Packages'
  inputs:
    command: 'pack'
    packagesToPack: '**/CybtansSDK.sln'
    configuration: '$(configuration)'
    nobuild: true
    includesymbols: true
    versioningScheme: 'byBuildNumber'

- task: NuGetCommand@2
  displayName: 'Publish Artifacts'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'f890b23d-d5ed-45bb-8308-1fe776f4fa8a/c8742fb6-b06b-42df-b89a-4dc8a8b66de6'
    allowPackageConflicts: true