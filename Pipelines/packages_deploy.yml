# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(majorMinorPachVersion).$(buildVersion)

# pipeline variables
variables:
   majorMinorPachVersion: 1.0.16   
   buildVersion: $[counter(variables['majorMinorPachVersion'], 1)]
   packVersion: $(majorMinorPachVersion)-beta.$(buildVersion)


trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore Cybtans SDK'
  inputs:
    command: 'restore'
    projects: '**/CybtansSDK.sln'   

- task: DotNetCoreCLI@2
  displayName: 'Build Cybtans SDK'
  inputs:
    command: 'build'
    projects: '**/CybtansSDK.sln'
    arguments: '--configuration $(configuration)'
    versioningScheme: 'byBuildNumber' 

- task: DotNetCoreCLI@2
  displayName: 'Test Cybtans SDK'
  inputs:
    command: 'test'
    projects: '**/CybtansSDK.sln'
    testRunTitle: 'Run Tests Cybtans SDK'

- task: DotNetCoreCLI@2
  displayName: 'Package Nuget Packages'
  inputs:
    command: 'pack'
    packagesToPack: '**/CybtansSDK.sln'
    configuration: '$(configuration)'    
    arguments: -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
    nobuild: true
    versionEnvVar: packVersion
    versioningScheme: byEnvVar

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Cybtans*.nupkg;!$(Build.ArtifactStagingDirectory)/**/Cybtans*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Cybtans Nuget'
    arguments: '--skip-duplicate'