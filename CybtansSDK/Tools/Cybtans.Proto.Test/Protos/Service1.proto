syntax = "proto3";

package Service1;

option namespace = "Services1";

message User {
	int32 id = 1;
	string name = 2 [required = true];
	int32  age = 3 [optional = true];
	int64  longAge = 4;
	float floatValue = 5 [default = 1];
	double doubleValue = 6;
	repeated string preferences = 7;
	map<string, string> data = 8;	
	datetime createDate = 9;
	datetime updateDate = 10 [optional = true];
	int8 byteValue = 11;
	int16 shortValue = 12;
	bool boolean = 13;
	bytes buffer = 14;
}

message Message {
	int32 id = 1;
	string msg = 2;
}

message GetMessageResponse{
	User user  = 1;
	repeated Message messages = 2;
}

message GetUserRequest{
	int32 id = 1;
	string operation = 2;
	RequestType type = 3;
}

enum RequestType {
	VALUE1  = 0;
	VALUE2  = 1;
	VALUE3  = 2;
}

service UserService{
	option (prefix) ="api/service1";

	rpc GetUser(GetUserRequest) returns (User){
		option template = "{id}";
		option method = "GET";
	};

	rpc GetUser2(GetUserRequest) returns (User){
		option template = "{id}/operation/{operation}";
		option method = "GET";
	};

	rpc CreateUser(User) returns (User){		
		option method = "POST";
	};

	rpc DeleteUser(GetUserRequest) returns (User){
		option template = "{id}";
		option method = "DELETE";
	};

	rpc UpdateUser(User) returns (User){
		option template = "{id}";
		option method = "PUT";
	};
}