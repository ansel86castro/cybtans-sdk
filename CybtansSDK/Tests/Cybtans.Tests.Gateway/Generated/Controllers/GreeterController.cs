
//*****************************************************
// <auto-generated>
//   Generated by the cybtans protocol buffer compiler.  DO NOT EDIT!
//   Powered By Cybtans    
// </auto-generated>
//******************************************************

using Cybtans.Test.Gateway.Services.Definition;
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;

using models = global::Cybtans.Tests.Gateway.Models;

namespace Cybtans.Tests.Grpc.Controllers
{
	[Route("greeter")]
	[ApiController]
	public partial class GreeterController : ControllerBase
	{
		private readonly IGreeter _service;
		private readonly ILogger<GreeterController> _logger;
		private readonly global::Cybtans.AspNetCore.Interceptors.IMessageInterceptor _interceptor;
		
		public GreeterController(IGreeter service,  ILogger<GreeterController> logger, global::Cybtans.AspNetCore.Interceptors.IMessageInterceptor interceptor = null)
		{
			_service = service;
			_logger = logger;
			_interceptor = interceptor;
		}
		
		[HttpGet("hello")]
		public async Task<models::HelloReply> SayHello([FromQuery]models::HelloRequest request)
		{
			_logger.LogInformation("Executing {Action} {Message}", nameof(SayHello), request);
			
			if(_interceptor != null )
			{
			    await _interceptor.Handle(request).ConfigureAwait(false);
			}
			
			var result = await _service.SayHello(request).ConfigureAwait(false);
			return result;
		}
	}

}
